---

- name: Set Zookeeper config dir
  set_fact:
    amq_streams_zookeeper_config_dir: "{{ amq_streams_home_dir }}/config"
  when: amq_streams_zookeeper_config_dir is not defined

- name: Set Zookeeper log dir
  set_fact:
    amq_streams_zookeeper_log_dir: "{{ amq_streams_home_dir }}/logs"
  when: amq_streams_zookeeper_log_dir is not defined

- name: Set Zookeeper log config file
  set_fact:
    amq_streams_zookeeper_config_file: "{{ amq_streams_zookeeper_config_dir }}/{{ amq_streams_zookeeper_config_file_name }}"

- name: Create Zookeeper working directories
  file:
    path: "{{ item }}"
    owner: "{{ amq_streams_user }}"
    group: "{{ amq_streams_group }}"
    state: directory
  with_items:
    - "{{ amq_streams_zookeeper_base_dir }}"
    - "{{ amq_streams_zookeeper_log_dir }}"
    - "{{ amq_streams_zookeeper_config_dir }}"


- name: Set Zookeeper variables as facts
  set_fact:
    amq_streams_zookeeper_client_port: "{{ amq_streams_zookeeper_client_port }}"
    amq_streams_zookeeper_client_port_address: "{{Â ansible_facts[amq_streams_zookeeper_interface_name]['ipv4']['address'] }}" # TODO extract interface var
    amq_streams_zookeeper_configuration_port1: "{{ amq_streams_zookeeper_configuration_port1 }}"
    amq_streams_zookeeper_configuration_port2: "{{ amq_streams_zookeeper_configuration_port2 }}"
    amq_streams_zookeeper_configuration_role: "{{ amq_streams_zookeeper_configuration_role }}"
  when: amq_streams_zookeeper_id is defined

- name: Create Zookeeper MyId file
  copy:
    dest: "{{ amq_streams_zookeeper_base_dir }}/myid"
    content: "{{ amq_streams_zookeeper_id }}"
  when: amq_streams_zookeeper_id is defined

- include_tasks: set_zookeeper_facts.yml
  when: amq_streams_zookeeper_id is defined

- name: Create Zookeeper Configuration file
  template:
    src: zookeeper.properties.j2
    dest: "{{ amq_streams_zookeeper_config_file }}"
    owner: "{{ amq_streams_user }}"
    group: "{{ amq_streams_group }}"
  notify:
    - Restart zookeeper
  tags:
    - configure


- name: Create Zookeeper Service file
  template:
    src: zookeeper.service.j2
    dest: "{{ amq_streams_zookeeper_service_file }}"
  notify:
    - Systemd reload
    - Restart zookeeper
  tags:
    - configure


- name: Enable Zookeeper Service
  service:
    name: "{{ amq_streams_zookeeper_service_name }}"
    enabled: yes